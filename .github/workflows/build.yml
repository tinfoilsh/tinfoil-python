name: Build

on:
  push:
    tags:
      - "v*"

jobs:
  build_linux:
    name: Build Linux wheels
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python: ["3.10", "3.11", "3.12", "3.13"]
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python }}

      - name: Install build tools
        run: pip install build

      - name: Install Go
        run: |
          sudo apt-get update
          sudo apt-get install -y golang

      - name: Clone verifier repo
        uses: actions/checkout@v4
        with:
          repository: tinfoilsh/verifier
          ref: v0.0.21
          path: verifier

      - name: Install Go tools
        run: |
          go install golang.org/x/tools/cmd/goimports@latest
          go install github.com/go-python/gopy@latest

      - name: Generate Go bindings
        run: |
          cd verifier && gopy build -output=tinfoil_verifier -vm=python3 github.com/tinfoilsh/verifier/client
          mv tinfoil_verifier ../tinfoil/
          cd .. && rm -rf verifier

      - name: Build wheel
        run: |
          python3 -m build
          python3 rename.py
          # Force manylinux2014 tag
          for wheel in dist/*linux*.whl; do
            mv "$wheel" "${wheel//manylinux_2_39/manylinux2014}"
          done

      - name: Upload Linux wheels
        uses: actions/upload-artifact@v4
        with:
          name: linux-wheels-${{ matrix.python }}
          path: ./dist/*.whl

  build_macos:
    name: Build macOS wheels
    runs-on: macos-latest
    strategy:
      matrix:
        python: ["3.10", "3.11", "3.12", "3.13"]
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python }}

      - name: Install build tools
        run: pip install build

      - name: Set deployment target
        run: |
          echo "MACOSX_DEPLOYMENT_TARGET=10.15" >> $GITHUB_ENV

      - name: Clone verifier repo
        uses: actions/checkout@v4
        with:
          repository: tinfoilsh/verifier
          ref: v0.0.21
          path: verifier

      - uses: actions/setup-go@v5
        with:
          go-version-file: verifier/go.mod

      - name: Install Go tools
        run: |
          go install golang.org/x/tools/cmd/goimports@latest
          go install github.com/go-python/gopy@latest

      - name: Generate Go bindings
        run: |
          cd verifier && gopy build -output=tinfoil_verifier -vm=python3 github.com/tinfoilsh/verifier/client
          mv tinfoil_verifier ../tinfoil/
          cd .. && rm -rf verifier

      - name: Build wheel
        run: |
          python3 -m build
          python3 rename.py

      - name: Upload macOS wheels
        uses: actions/upload-artifact@v4
        with:
          name: macos-wheels-${{ matrix.python }}
          path: ./dist/*.whl

  build_sdist:
    name: Build source distribution
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5

      - name: Install build tools
        run: pip install build

      - name: Build sdist
        run: python -m build --sdist

      - name: Upload sdist
        uses: actions/upload-artifact@v4
        with:
          name: sdist
          path: ./dist/*.tar.gz

  release:
    name: Release
    runs-on: ubuntu-latest
    needs: [build_linux, build_macos, build_sdist]
    permissions:
      contents: write
      id-token: write
    steps:
      - uses: actions/checkout@v4

      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          path: dist

      - name: Organize artifacts
        run: |
          mkdir -p dist
          mv linux-wheels-*/*.whl dist/ || true
          mv macos-wheels-*/*.whl dist/ || true
          mv sdist/*.tar.gz dist/

      - name: Create release
        uses: softprops/action-gh-release@v2
        with:
          files: dist/*

      - name: Publish to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1