name: Build

on:
  push:
    branches:
      - main
    tags:
      - 'v*'
  pull_request:

jobs:
  build_wheels:
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-13, macos-14]
    steps:
      - uses: actions/checkout@v4

      - name: Build wheels
        uses: pypa/cibuildwheel@v2.23.0
        env:
          CIBW_BUILD: "cp310-* cp311-* cp312-* cp313-*"
          CIBW_TEST_COMMAND: "python -m pip install {wheel} && python -c 'from tinfoil import TinfoilAI'"
          CIBW_BEFORE_ALL_LINUX: |
            curl -LO https://go.dev/dl/go1.24.0.linux-amd64.tar.gz
            tar -C /usr/local -xzf go1.24.0.linux-amd64.tar.gz
            export PATH=/usr/local/go/bin:$PATH
            export GOPATH=$HOME/go
            export PATH=$GOPATH/bin:$PATH
            go install golang.org/x/tools/cmd/goimports@latest
            go install github.com/go-python/gopy@latest
            git clone --depth 1 -b v0.0.22 https://github.com/tinfoilsh/verifier
            cd verifier
            gopy build -output=tinfoil_verifier -vm=python3 github.com/tinfoilsh/verifier/client
            mv tinfoil_verifier ../tinfoil/
            cd ..
            rm -rf verifier
          CIBW_BEFORE_ALL_MACOS: |
            brew install go
            echo "GOPATH=$HOME/go" >> $GITHUB_ENV
            echo "$HOME/go/bin" >> $GITHUB_PATH
            go install golang.org/x/tools/cmd/goimports@latest
            go install github.com/go-python/gopy@latest
            git clone --depth 1 -b v0.0.22 https://github.com/tinfoilsh/verifier
            cd verifier
            gopy build -output=tinfoil_verifier -vm=python3 github.com/tinfoilsh/verifier/client
            mv tinfoil_verifier ../tinfoil/
            cd ..
            rm -rf verifier

      - uses: actions/upload-artifact@v4
        with:
          name: cibw-wheels-${{ matrix.os }}
          path: ./wheelhouse/*.whl

  build_sdist:
    name: Build source distribution
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5

      - name: Install build tools
        run: python -m pip install --upgrade pip build

      - name: Build sdist
        run: python -m build --sdist

      - name: Upload sdist
        uses: actions/upload-artifact@v4
        with:
          name: cibw-sdist
          path: dist/*.tar.gz

  release:
    name: Release
    runs-on: ubuntu-latest
    needs: [build_wheels, build_sdist]
    if: startsWith(github.ref, 'refs/tags/')
    permissions:
      contents: write
      id-token: write
    steps:
      - uses: actions/checkout@v4

      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          path: dist

      - name: Organize artifacts
        run: |
          mv dist/cibw-wheels-*/*.whl dist/ || true
          mv dist/cibw-sdist/*.tar.gz dist/ || true
          rm -rf dist/cibw-wheels-* dist/cibw-sdist || true
          ls -l dist

      - name: Create release
        uses: softprops/action-gh-release@v2
        with:
          files: dist/*

      - name: Publish to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1